services:
  mongodb-prod:
    image: mongo:4.4 
    volumes:
      - mongodb_data_prod:/data/db 

    #environment:
      
      #MONGO_INITDB_ROOT_USERNAME: affadine 
      #MONGO_INITDB_ROOT_PASSWORD: Affadine99  
      #MONGO_INITDB_DATABASE: ecommerce_main_db_prod 

    networks:
      - app-network-prod

    # secrets: 
    #   - mongo_root_username_prod
    #   - mongo_root_password_prod
    #   - mongo_db_name_prod

  auth-service-prod:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile 
    image: auth-service:latest 

    ports:
      - "3001:3001"
    env_file:
      - ./services/auth-service/.env.production 

    #environment:
      #MONGO_URI: mongodb://affadine:Affadine99@mongodb-prod:27017/auth_db?authSource=admin
    depends_on:
      - mongodb-prod
    networks:
      - app-network-prod
   
  product-service-prod:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile 
    image: product-service:latest 
    ports:
      - "3000:3000" 
    env_file:
      - ./services/product-service/.env.production 

    #environment:
     # MONGO_URI: mongodb://affadine:Affadine99@mongodb-prod:27017/ecommerce_main_db_prod?authSource=admin
    
    depends_on:
      - mongodb-prod
    networks:
      - app-network-prod
    
  order-service-prod:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile 
    image: order-service:latest 
    ports:
      - "3002:3002" 
    env_file:
      - ./services/order-service/.env.production 

    #environment:
     # MONGO_URI: mongodb://affadine:Affadine99@mongodb-prod:27017/orders?authSource=admin
    
    depends_on:
      - mongodb-prod
      - product-service-prod 
    networks:
      - app-network-prod
    
  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile 
    image: frontend:latest
    ports:
      - "8080:80" 
    env_file:
      - ./frontend/.env.production 
    volumes:
      - ./frontend/nginx.prod.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth-service-prod
      - product-service-prod
      - order-service-prod
    networks:
      - app-network-prod

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus-prod
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml
    ports:
      - "9090:9090"
    networks:
      - app-network-prod

  grafana:
    image: grafana/grafana:latest
    container_name: grafana-prod
    ports:
      - "3003:3000"
    volumes:
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning
      - grafana_data_prod:/var/lib/grafana
    networks:
      - app-network-prod

networks:
networks:
  app-network-prod:
    driver: overlay 

volumes:
  mongodb_data_prod:
    driver: local 
  grafana_data_prod:
    driver: local 
# secrets: 
#   mongo_root_username_prod:
#     external: true
#   mongo_root_password_prod:
#     external: true
#   mongo_db_name_prod:
#     external: true
#   mongo_uri_prod:
#     external: true
