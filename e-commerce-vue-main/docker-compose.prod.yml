services:
 
  mongodb-prod:
    image: mongo:4.4
    container_name: mongodb-prod
    restart: always
    volumes:
      - mongodb_data_prod:/data/db
    
    networks:
      - app-network-prod

  
  auth-service-prod:
    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    image: auth-service:latest
    container_name: auth-service-prod
    restart: always
    ports:
      - "3001:3001"
    env_file:
      - ./services/auth-service/.env.production 
   
    depends_on:
      - mongodb-prod
    networks:
      - app-network-prod

  
  product-service-prod:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    image: product-service:latest
    container_name: product-service-prod
    restart: always
    ports:
      - "3000:3000"
    env_file:
      - ./services/product-service/.env.production 
      
    depends_on:
      - mongodb-prod
    networks:
      - app-network-prod

  
  order-service-prod:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    image: order-service:latest
    container_name: order-service-prod
    restart: always
    ports:
      - "3002:3002"
    env_file:
      - ./services/order-service/.env.production  
    
    depends_on:
      - mongodb-prod
      - product-service-prod
    networks:
      - app-network-prod

  frontend-prod:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    image: frontend:latest
    container_name: frontend-prod
    restart: always
    ports:
      - "8080:80"
    env_file:
      - ./frontend/.env.production
    volumes:
      - ./frontend/nginx.prod.conf:/etc/nginx/conf.d/default.conf
    depends_on:
      - auth-service-prod
      - product-service-prod
      - order-service-prod
    networks:
      - app-network-prod


networks:
  app-network-prod:
    driver: bridge 

volumes:
  mongodb_data_prod:
    driver: local