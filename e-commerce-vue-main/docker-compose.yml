services:
  
  mongodb:
    image: mongo:4.4
    container_name: mongodb-dev
    
    ports:
      - "27017:27017"
    
    volumes:
      - mongodb_data:/data/db
    
    networks:
      - app-network
    
    restart: always

  
  auth-service:

    build:
      context: ./services/auth-service
      dockerfile: Dockerfile
    container_name: auth-service-dev
    
    ports:
      - "3001:3001"
   
    volumes:
      - ./services/auth-service:/app
     
      - /app/node_modules
    
    environment:
      - MONGODB_URI=mongodb://mongodb:27017/auth_db
      - PORT=3001
      - NODE_ENV=development 

    depends_on:
      - mongodb
    
    networks:
      - app-network
    restart: always

  
  product-service:
    build:
      context: ./services/product-service
      dockerfile: Dockerfile
    container_name: product-service-dev
    ports:
      - "3000:3000"
    volumes:
      - ./services/product-service:/app
      - /app/node_modules
    environment:
      - PORT=3000
      - MONGODB_URI=mongodb://mongodb:27017/ecommerce
      - NODE_ENV=development
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: always

  
  order-service:
    build:
      context: ./services/order-service
      dockerfile: Dockerfile
    container_name: order-service-dev
    ports:
      - "3002:3002"
    volumes:
      - ./services/order-service:/app
      - /app/node_modules
    environment:
      - PORT=3002
      - MONGODB_URI=mongodb://mongodb:27017/orders
      - JWT_SECRET=efrei_super_pass
      - VITE_PRODUCT_SERVICE_URL=http://product-service:3000 
      - NODE_ENV=development
    depends_on:
      - mongodb
    networks:
      - app-network
    restart: always

  
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: frontend-app-dev
    ports:
      - "8080:80" 
    volumes:
      - ./frontend:/app
      - /app/node_modules #
    environment:
      
      - NODE_ENV=development 
    depends_on:
      - auth-service
      - product-service
      - order-service
    networks:
      - app-network
    restart: always

networks:
  app-network:
    driver: bridge 


volumes:
  mongodb_data: 